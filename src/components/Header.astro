---
// dependencies
import cns from "classnames";

// components
import Svg from "@components/Svg.astro";

// data
import { SOCIAL_LINKS } from "../constants";

// types
type Props = {
  isTransparent?: boolean;
  hasWaves?: boolean;
};

// props
const { isTransparent = false, hasWaves = true } = Astro.props;
---

<header
  class={cns("header", {
    ["is-transparent"]: isTransparent,
  })}
>
  <a class={"skip-link"} href="#main" target="_self">Skip to main content</a>
  <div class="wrapper container">
    <a class="logo-link" href="/">
      <Svg path="logos/svg/logo-on-dark.svg" />
      <span class="sr-only">Homepage</span>
    </a>

    <nav class="nav" aria-label="desktop">
      <div class="links-wrap">
        <a href="/posts">Posts</a>

        <a href="/bio">Bio</a>

        <a href="/uses">Uses</a>

        <a href={SOCIAL_LINKS.github}>
          <Svg path="icons/github.svg" size="32" />
          <span class="sr-only">GitHub</span>
        </a>
      </div>
    </nav>
  </div>

  {
    hasWaves && (
      <div>
        <svg
          class="waves"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          viewBox="0 24 150 28"
          preserveAspectRatio="none"
          shape-rendering="auto"
        >
          <defs>
            <path
              id="gentle-wave"
              d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"
            />
          </defs>
          <g class="layers">
            <use
              xlink:href="#gentle-wave"
              x="48"
              y="0"
              fill="rgba(255,255,255,1"
            />
          </g>
        </svg>
      </div>
    )
  }
</header>

<style lang="postcss">
.sr-only {
  height: 1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.skip-link {
  background: var(--js-component-header);
  color: #fff;
  padding: 4px;
  position: absolute;
  transform: translateY(-100%);
  z-index: 10;

  @media (prefers-reduced-motion: no-preference) {
    transition: transform 0.2s;
  }

  &:focus {
    transform: translateY(0);
  }
}

.header {
  --header-text-color: var(--js-color-white);

  background-color: var(--js-component-header);
  font-family: var(--js-font-heading);
  font-size: 1.2rem;
  line-height: 1;
  margin-block-end: 2rem;
  position: relative;
  z-index: 50;
}

.waves {
  height: 40px;

  /* Fix for safari gap */
  margin-bottom: -8px;
  min-height: 40px;
  position: relative;
  width: 100%;

  @media (--js-bp-md) {
    height: 15vh;
    min-height: 100px;
    max-height: 150px;
  }

  .layers > use {
    fill: var(--js-theme-bg);

    @media (prefers-reduced-motion: no-preference) {
      animation: move-forever 50s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;
      animation-delay: -8s;
    }
  }
}

@keyframes move-forever {
  0% {
    transform: translate3d(-90px, 0, 0);
  }

  100% {
    transform: translate3d(85px, 0, 0);
  }
}

.is-transparent {
  background: transparent;

  &::after {
    all: initial;
  }
}

.wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding-block-end: 1rem;
  padding-block-start: 1rem;
  position: relative;
  width: 100%;

  @media (--js-bp-sm) {
    flex-flow: row nowrap;
    justify-content: space-between;
    padding-block-end: 3rem;
    padding-block-start: 3rem;
  }
}

.nav {
  align-items: center;
  display: flex;
  justify-content: space-between;
  margin-block-start: 1rem;

  @media (--js-bp-sm) {
    margin-block-start: 0;
  }
}

.logo-link {
  flex: 1;
  flex-basis: 100%;
  text-align: center;

  @media (--js-bp-sm) {
    flex: none;
    flex-basis: auto;
  }
}

.logo-img {
  height: auto;
  max-width: 6rem;
}

.links-wrap {
  align-items: center;
  display: flex;
  flex: 1;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: space-evenly;

  @media (--js-bp-sm) {
    align-items: center;
    flex-direction: row;
    gap: 2rem;
    justify-content: flex-end;
    margin-block-start: 0;
    padding-inline-start: 1.25rem;
  }

  > a {
    color: var(--header-text-color);
    font-weight: 500;
    text-decoration: none;
    text-transform: uppercase;

    &:hover {
      text-decoration: underline;
    }

    &.active {
      color: var(--js-color-yellow);
    }

    svg {
      width: 1.5rem;
    }
  }
}

/* Button for toggling the navbar when in its collapsed state */
.navbar-toggler {
  padding: 1rem;
  font-size: 1rem;
  line-height: 1;
  color: var(--js-color-white);
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.25rem;

  &:hover {
    text-decoration: none;
  }

  &:focus {
    text-decoration: none;
    outline: 0;
  }
}

/*
 * Keep as a separate element so folks can easily override it with another icon
 * or image file as needed.
 */
.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#fff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100%;
}

</style>
